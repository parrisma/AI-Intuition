import logging


def must_implement(*attrs):
    def class_rebuilder(cls):
        class NewClass(cls):
            def __init__(self):
                logging.error("\nMust Implement Decorator Init")
                cl = getattr(self, "__call__", None)
                if not callable(cl):
                    msg = "Class must implement __call__(self, arg1)".format("")
                    logging.critical(msg)
                    raise NotImplementedError(msg)
                super().__init__()

        return NewClass

    return class_rebuilder
